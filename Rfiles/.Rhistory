class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix, my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patient,my_matrix)
cbind(patients,my_matrix)
my_data<-data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patients","age","weight","bp","rating","test")
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data,cnames)
colnames(cnames,my_data)
info(colnames)
info(colname)
?colname
?colnames
colnames(my_data)<-cnames
my_data
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(clc_list)
as.character(cls_list)
sapply(flags,class)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
laaply(flag_colors,sum)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_val, function(elem) elem[2])
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
taaply(falgs$animate, flags$landmass, ,mean)
tapply(falgs$animate, flags$landmass, ,mean)
tapply(falgs$animate, flags$landmass, mean)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary
)
tapply(flags$population, flags$landmass, summary)
ls()
class(plant)
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plant)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10,replace = FALSE)
sample(1:20,10)
LETTERS
Sample(LETTERS)
sample(LETTERS)
flip<-sample(c(0,1),100, prob = c(0.3,0.7))
flip<-sample(c(0,1),100, replace = TRUE,prob = c(0.3,0.7))
flips<-sample(c(0,1),100, replace = TRUE,prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1, size=100, prob =0.7)
flips2<-rbinom(100, size =1, prob=0.7)
flip2
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
rpois(5,10)
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
his(cm)
hist(cm)
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.tome()
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
month(t1)
months(t1)
quarters(t2)
strptime("october 17, 1986 08:24")
t3<-"october 17, 1986 08:24"
t3<-"October 17, 1986 08:24"
strptime(t3,"%B %d,%Y %H:%M")
strptime(t3,"%B %d,% Y %H:%M")
t4<-strptime(t3,"%B %d,% Y %H:%M")
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys,time()-t1
Sys.time()-t1
difftime(Sys.time(), t1, units = 'days')
1
swurl
swirl()
clear
clc
getcwd
getwd
getwd()
getwd()
?cd
getwd
?getwd
swirl()
swirl(0
)
swirl()
library("swirl")
swirl()
install_from_swirl("Data Analysis")
swirl()
cars
cars$mpgcity
cars$mpgCity
myMPG<-cars$mpgCity
mean(myMPG)
median(myMPG)
table(myMPG)
19
range(cars$price)
61.9-7.4
var(cars$price)
sd(cars$price)
15
20
install_from_swirl("Regression Models")
install_from_swirl("Regression Models")
library("swirl")
swirl()
bye
bye()
swirl()
exit()
bye()
x<-[1:6]
x<-1:6
x
class(x)
as.numeric(X)
as.numeric(x)
class(x)
as.character(x)
as.numeric(x)
class(x)
m<-matrix(nrow=2,ncol=3)
m
dim(m)
attribute(m)
atribute(m)
attributes(m)
m<-matrix(1:6,nrow=2,ncol=3)
m
m<-matrix(1:3,nrow=2,ncol=3)
m
x
dim(x)<-(2,3)
dim(x)<-c(2,30)
dim(x)<-c(2,3)
x
y<-6:11
cbind(x,y)
dim(y)<-c(2,3)
cbind(x,y)
rbind(x,y)
getwd()
find.package("devtool")
find.package("devtools")
find.package("devtools")
install.package("devtools")
install.packages("devtools")
library(rtools)
library(devtools)
find_rtools()
library(swirl)
swirl
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq(5,10,length = 30)
my_seq <- seq(5,10,length = 30)
install.packages('rJava',,'http://www.rforge.net/')
install.packages('rJava','http://www.rforge.net/')
install.packages('rJava', .libPaths()[1], 'http://www.rforge.net/')
install.packages("vegan")
install.packages("sem")
library(sem)
data(Klein)
Klein$P[1:21]
Klein$X[1:21]
Klein$P.lag <- c(NA,Klein$P[1:21])
Klein$X.lag <- c(NA,Klein$X[1:21])
Wg
I(Wg+Wp)
Klein.eqn1 <- tsls( C ~ P + P.lag +I(Wg+Wp),
instruments =~G + T + Wg + I(Year - 1931) + K.lag + P.lag + X.lag,
data=Klein )
klein.Wg
klein$Wg
Klein$Wg
ent
rm(list = ls())
source("D:/my_R/My_matlab_R_adapter.R")
clc()
library(sem)
library(polycor)
data(CNES)
head(CNES) #
# Do heterogeneous correlation on the dataset
hetcor(CNES, ML=TRUE)
library(polycor)
install.packages(polycor)
install.packages("polycor")
library(polycor)
R.version()
R.Version()
install.packages('stats')
install.packages("stats")
install.packages("stats")
?pca
? pca
install.packages("vegan")
library('vegan')
? pca
raw <- matrix(c(1,2,2.5, 2.5, 1,0.5, 0, 1, 2, 4, 3, 1), nrow = 6)
colnames(raw) <- c("s1","s2")
rownames(raw) <- c("r1","r2","r3","r4","r5","r6")
o.pca <-pca(raw)
source('C:/Users/Wei-Ting/Dropbox/DataCoding/R_primers/R_files/TBP_PCA1.R')
install.packages("labdsv")
install.packages("labdsv")
library('labdsv')
o.pca <-pca(raw)
o.pca
? pca
E <- o.pca$sdec^2/o.pca$totdev
E
o.pca$sdec^2
o.pca$sdev
E <- o.pca$sdev^2/o.pca$totdev
E
plot(o.pca$scores[,1], o.pca$scores[,2], type="n", asp=1)
mames(sveg)
names(sveg)
install.packages("dave")
library('dave')
names("sveg")
names(sveg)
View(CNES)
1+1
1+1
1 > 0
ls()
ls()
X<-1
typeof(X)
typeof(TRUE)
typeof("myname")
ls()
echo('Hi')
mean(1,2)
sqrt(4)
1 + 1
2 - 1
3 * 6
4 / 2
10%%3
10%/%3
10 %% 3
10 %/% 3
X <- 1:20
X/3
y <- 1:3
X/y
X+y
X*y
X <- matrix(6, nrow = 3)
X
X <- matrix(1:6, nrow = 3)
X
y <- 1:3
Y*X
y*x
y*X
Y*X
Y <- 1:3
X*Y
X <-matrix(1:6, nrow = 3)
Y <-matrix(6:1, nrow = 2)
Y
Y <-matrix(6:1, nrow = 3)
Y
X
X*Y
t(Y)
t(Y)%*%X
t(Y)*X
Z <- matrix(6:1, nrow = 2)
Z
X%*%Z
X
library('vegan')
citation("vegan")
cite()
citation()
#####################################################################
# clean up environment
rm(list = ls())
# setwd("C:/Users/Wei-Ting/Dropbox/DataCoding/my_R/R_sem")
setwd("/Users/weitinglin/Dropbox/DataCoding/my_R/R_sem")
# Check directory have been changed
getwd()
#######################################################################
# Load package and data
#### in the .csv file, **Crab burrow** was replaced by **Crabburrow**, **Cyanobacteria** by **Cyano**
### clean workspace
rm(list = ls())
### Set working directory to current folder
setwd("/Users/weitinglin/Dropbox/DataCoding/my_R/R_sem")
#### Check directory have been changed
getwd()
### create citation
citation(package ="sem")
saltexCD <- read.table("./data/saltex_SEM_CD.csv",sep =",",header = TRUE) # Diatom
### calculate covariance
covsaltexCD <- cov(saltexCD)
covsaltexCD
library(sem)
library(polycor)
saltexCD <- read.table("./data/saltex_SEM_CD.csv",sep =",",header = TRUE) # Diatom
### calculate covariance
covsaltexCD <- cov(saltexCD)
saltexCD <- read.table("./data/saltex_SEM_CD.csv",sep =",",header = TRUE) # Diatom
computer <- Sys.info()["nodename"]
# 2. use control loop to set working directory
if(grepl(computer, "weitingdeAir")){
setwd("/Users/weitinglin/Dropbox/PhD_projects/herbivore_SG_Iva/Rfiles")
}else {
if(grepl(computer, "WLIN_PC")){
setwd("C:/Users/Wei-Ting/Dropbox/PhD_projects/herbivore_SG_Iva/Rfiles")
} else {
warning("Check computer information")
} # end if (x...
} # end if(grep...
rm(computer) # this variable will not be used anymore
rm(list = ls())
source('script_loaddata.R')
library(sem)
library(polycor)
subdata <- data[c('PC1', 'Area','Aall', 'Pall', 'Hall')]
covdata <- cov(subdata)
spp <- data[c('Aall', 'Pall', 'Hall')]
cor(spp)
model2 <- specifyModel(file="./model/mod2.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
subdata <- data[c('pc1', 'Area','Noon_Shade', 'Distance_to_Nearest','Aall', 'Pall', 'Hall')]
covdata <- cov(subdata)
model0D <- specifyModel(file="./model/mod0D.txt", endog.variances=TRUE)
semHerb <- sem(model0D, covdata, N=38, data)
summary(semHerb)
rm(list = ls())
source('script_loaddata.R')
library(sem)
library(polycor)
subdata <- data[c('PC1', 'Distance_to_Nearest',  'Area','Aall', 'Pall', 'Hall')]
covdata <- cov(subdata)
model2 <- specifyModel(file="./model/mod2.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
subdata <- data[c('PC1', 'Distance_to_Nearest',  'Area','Aall', 'Pall', 'Hall')]
covdata <- cov(subdata)
spp <- data[c('Aall', 'Pall', 'Hall')]
cor(spp)
covdata
model2 <- specifyModel(file="./model/mod2.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2.txt", endog.variances=TRUE)
model2 <- specifyModel(file="./model/mod2.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2A.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2A.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2B.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2C.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2D.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2E.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2E.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2F.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2A.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2A.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2B <- specifyModel(file="./model/mod2B.txt", endog.variances=TRUE)
semHerb <- sem(model0E, covdata, N=38, data)
model2B <- specifyModel(file="./model/mod2B.txt", endog.variances=TRUE)
semHerb <- sem(model2B, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2 <- specifyModel(file="./model/mod2A.txt", endog.variances=TRUE)
semHerb <- sem(model2, covdata, N=38, data)
summary(semHerb)
model2C <- specifyModel(file="./model/mod2C.txt", endog.variances=TRUE)
semHerb <- sem(model2C, covdata, N=38, data)
summary(semHerb)
model20 <- specifyModel(file="./model/mod20.txt", endog.variances=TRUE)
semHerb <- sem(model20, covdata, N=38, data)
summary(semHerb)
